
&НаКлиенте
Процедура Создать(Команда)  
	Если ЗначениеЗаполнено(Группа) Тогда 
		Если ЗначениеЗаполнено(СписокСтудентов) Тогда
		
			Если НЕ ЗначениеЗаполнено(Студенты) Тогда
				 ЗаполнитьТаблицуСтудентов();	
			КонецЕсли;
			СоздатьНаСервере();
			ЭтаФорма.Закрыть();
		Иначе 
			
			Предупреждение("Заполните список студентов");
		
		КонецЕсли;
		
	Иначе 
		Предупреждение("Заполните поле 'Группа'");	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСписокСтудентов()

МассивСтудентов = Новый Массив;
	Для Сч = 1 По СтрЧислоСтрок(СписокСтудентов) Цикл
		
		Строка = СокрЛП(СтрПолучитьСтроку(СписокСтудентов,Сч));
		Если ЗначениеЗаполнено(Строка) Тогда 
			Попытка  
				Студент = СтрРазделить(Строка, " ",Ложь);
				Фамилия = Студент[0];
				Имя = Студент[1];
				
				СтудентПолученный = Новый Структура;
				СтудентПолученный.Вставить("Имя", Имя);
				СтудентПолученный.Вставить("Фамилия",Фамилия);
				
				МассивСтудентов.Добавить(СтудентПолученный);
			Исключение 
				Продолжить;
			КонецПопытки;
			
		КонецЕсли;
	КонецЦикла;
		
	Возврат МассивСтудентов
КонецФункции 


&НаСервере
Процедура СоздатьНаСервере()
	Для каждого Студент Из Студенты Цикл
	
		Спр = Справочники.Студенты.СоздатьЭлемент(); 
		Спр.Наименование = ИмпортДанных.ПолучитьФИ(Студент.Фамилия,Студент.Имя);
		Спр.Имя 		= Студент.Имя;
		Спр.Фамилия 	= Студент.Фамилия;
		
		Если ЗначениеЗаполнено(Справочники.Студенты.НайтиПоНаименованию(Группа.Наименование)) Тогда
			Спр.Родитель = Справочники.Студенты.НайтиПоНаименованию(Группа.Наименование);	  
		Иначе 
			Сообщить("Группа не найдена");
		КонецЕсли;     
		Спр.Записать();
		//Спр.Родитель
	КонецЦикла;	
	Сообщить("Создание завершенно");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьГруппу(Команда)
	ОткрытьФормуМодально("Обработка.ДанныеИС.Форма.СозданиеГруппы");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицуСтудентов()
	Если ЗначениеЗаполнено(СписокСтудентов) Тогда 		
		МассивСтуд = ПолучитьСписокСтудентов(); 
		Студенты.Очистить();
		Для каждого Студ Из МассивСтуд Цикл
			
			ТабСтуд = Студенты.Добавить();
			
			ТабСтуд.Имя =  Студ.Имя;
			ТабСтуд.Фамилия = Студ.Фамилия;
			ТабСтуд.N = Студенты.Количество();
			
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура Обновить() 
	ЗаполнитьТаблицуСтудентов();	
КонецПроцедуры

//&НаКлиенте
//Процедура ОткрытьФайл(Команда)
//	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
//	Диалог.МножественныйВыбор = Ложь;
//	Диалог.Фильтр = "*(.xlsx,.csv,.txt)|*.xlsx;*.csv;*.txt";
//	
//	Если Диалог.Выбрать() Тогда
//	
//		Файл = Диалог.ПолноеИмяФайла;	
//		Расш = ПолучитьРасширениеФайла(Файл);
//		
//		Если Расш = "csv" Тогда
//			
//			ПолучитьДанныеИзФайлаCSV(Файл);	
//			
//		ИначеЕсли  Расш = "txt" Тогда	
//			
//			
//		ИначеЕсли  Расш = "xlsx" Тогда
//			
//		
//		Иначе 
//			Предупреждение("Неизвестное расширение " + Расш);
//		КонецЕсли;
//		
//	КонецЕсли;
//КонецПроцедуры

//Функция  ПолучитьДанныеИзФайлаCSV(ПутьКФалу)
//	Файл = Новый ТекстовыйДокумент;
//	Файл.Прочитать(ПутьКФалу);
//	
//	Для Стр = 1 По  Файл.КоличествоСтрок() Цикл
//		ТекСтрока = Файл.ПолучитьСтроку(Стр);
//		МассСтр =  СтрРазделить(ТекСтрока,";",Истина); 

//		Имя  	           	= МассСтр[1];
//		Фамилия 	  	= МассСтр[0]; 
//	
//	КонецЦикла;	
//КонецФункции

//&НаКлиенте
//Функция ПолучитьРасширениеФайла(Файл)
//	Масс = СтрРазделить(Файл,".");
//	Возврат Масс[Масс.Количество()-1];
//КонецФункции