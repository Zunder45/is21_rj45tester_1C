&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПолучитьПользователей();
	ПолучитьЗначенияКонстант();
КонецПроцедуры  

Процедура  ПолучитьЗначенияКонстант()
	Строка =  "Значения констант
	|ПравильныйРезультат: " + Константы.ПравильныйРезультат.Получить() + "
	|ГодСозданияКомпетенции: "+ СтрЗаменить(Константы.ГодСозданияКомпетенции.Получить(),Символы.НПП,"") + "
	|НаименованиеГруппы: " + Константы.НаименованиеГруппы.Получить();
	Элементы.ЗначениеКонстант.Заголовок = Строка;
КонецПроцедуры


#Область Пользователи
Процедура ПолучитьПользователей()
    	ЭтаФорма.Пользователи.Очистить();
	Список = ПользователиИнформационнойБазы. ПолучитьПользователей();	
	Для каждого Пользователь Из Список Цикл
		Таблица = Пользователи.Добавить();		
		Таблица.Имя 			= Пользователь.Имя;
		Для каждого  РольПользователя Из Пользователь.Роли Цикл
		
			Таблица.Роль			= РольПользователя;  	
		КонецЦикла;
	КонецЦикла; 	 	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ПолучитьПользователей();	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПользователя(Команда)
	Если ЗначениеЗаполнено(НаименованиеПользователя) Тогда  
		Если ЗначениеЗаполнено(Роль) Тогда
			ДобавитьПользователяНаСервере(НаименованиеПользователя,Роль);	
		Иначе
		    	Предупреждение("Поле 'Hоль' пустое");
	    	КонецЕсли;
	Иначе 
		Предупреждение("Поле 'Наименование' пустое");
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Процедура ДобавитьПользователяНаСервере(Наименование,Роль)   
	
	Пользователь = ПользователиИнформационнойБазы.СоздатьПользователя();
	Пользователь.Имя = Наименование;
	Пользователь.ПолноеИмя = Наименование; 
	Пользователь.Роли.Добавить(Метаданные.Роли.Найти(ПредопределенноеЗначение("Перечисление.Роли." + Роль)));
	Пользователь.Записать();
	
	Список = ПользователиИнформационнойБазы.ПолучитьПользователей();
	
	ПолучитьПользователей(); 
	
	НаименованиеПользователя = " ";
	Элементы.НаименованиеПользователя.ОбновитьТекстРедактирования();
	Роль = "";

КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда) 
	Пользователь = Элементы.Пользователи.ТекущиеДанные.Имя;
	Если Вопрос("Удалить пользователя '" + Пользователь + "'?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда	
		УдалитьПользователя(Пользователь);
		ПолучитьПользователей();	
	КонецЕсли;
	
КонецПроцедуры    

&НаСервере
Процедура УдалитьПользователя(Имя)
	ПользовательНаУдаление = ПользователиИнформационнойБазы.НайтиПоИмени(Имя);
	ПользовательНаУдаление.Удалить();
КонецПроцедуры

&НаКлиенте
Процедура ПользователиПередУдалением(Элемент, Отказ)
	Пользователь = Элементы.Пользователи.ТекущиеДанные.Имя;
	Если Вопрос("Удалить пользователя '" + Пользователь + "'?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда	
		УдалитьПользователя(Пользователь);
		ПолучитьПользователей();	
	Иначе 
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция НайтиПользователяВСписке(ИмяПользователя)

	Для каждого Пользователь Из Пользователи Цикл	
		Если Пользователь.Имя = ИмяПользователя Тогда 
			Возврат Истина	
		КонецЕсли;	
	КонецЦикла;           
	
	Возврат Ложь;
КонецФункции


&НаКлиенте
Процедура СоздатьСтандартныхПользователей(Команда)
	МассивСтандартныхПользователей = Новый Массив;
	
	Если НЕ НайтиПользователяВСписке("Администратор")  Тогда
	
		МассивСтандартныхПользователей.Добавить(Новый Структура(
		"Наименовение,Роль,Пароль",
		"Администратор",
		"Администратор",
		""));
	Иначе 
		
		Предупреждение("Пользоваетль 'Администратор' уже есть");
		
	КонецЕсли;
	
	Если НЕ НайтиПользователяВСписке("Оператор")  Тогда	
		МассивСтандартныхПользователей.Добавить(Новый Структура(
		"Наименовение,Роль,Пароль",
		"Оператор",
		"Оператор",
		""));	
	Иначе 
		
		Предупреждение("Пользоваетль 'Оператор' уже есть");	
	
	КонецЕсли;
	
	Для каждого СтПол  Из МассивСтандартныхПользователей Цикл
		ДобавитьПользователяНаСервере(СтПол.Наименовение, СтПол.Роль);
		Сообщить("'" + СтПол.Наименовение + "' создан");
	КонецЦикла;
	
КонецПроцедуры	

#КонецОбласти


#Область Импорт

  &НаКлиенте
Процедура ЗагрузитьЗаписиТестирования(Команда)   
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = "Выберите путь";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
	    	Файл = ДиалогОткрытияФайла.ПолноеИмяФайла;
	    	ИмпортДанных.ИмпортТестированиеНаСервере(Файл); 	 
		Сообщить("Загрузка завершена");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСтудентов(Команда)
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = "Выберите путь";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
	    	Файл = ДиалогОткрытияФайла.ПолноеИмяФайла;
	    	ИмпортДанных.ИмпортСтудентовНаСервере(Файл); 	 
		Сообщить("Загрузка завершена");
	КонецЕсли; 	
КонецПроцедуры    

&НаКлиенте
Процедура ЗагрузкаГрупп(Команда)
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = "Выберите путь";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
	    	Файл = ДиалогОткрытияФайла.ПолноеИмяФайла;
	    	ИмпортДанных.ИмпортГруппНаСервере(Файл); 	 
		Сообщить("Загрузка завершена");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьТемыПрактических(Команда)
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = "Выберите путь";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
	    	Файл = ДиалогОткрытияФайла.ПолноеИмяФайла;
	    	ИмпортДанных.ИмпортТемНаСервере(Файл); 	 
		Сообщить("Загрузка завершена");
	КонецЕсли; 
	
КонецПроцедуры
	
#КонецОбласти

#Область ЭкспортДанных
	
&НаКлиенте
Процедура ВыгрузитьРезультатыТестирования(Команда)
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = "Выберите путь";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
	    	ПутьККаталогу = ДиалогОткрытияФайла.Каталог;
	    	ЭкспортДанных.ЭкспортТестированиеCSVНаСервере(ПутьККаталогу);  
		Сообщить("Экспорт завершен");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ВыгрудитьТемыПрактических(Команда)
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = "Выберите путь";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
	    	ПутьККаталогу = ДиалогОткрытияФайла.Каталог;
	    	ЭкспортДанных.ЭкспортТемCSVНаСервере(ПутьККаталогу);  
		Сообщить("Экспорт завершен");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьДанныеСтудентов(Команда)
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = "Выберите путь";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
	    	ПутьККаталогу = ДиалогОткрытияФайла.Каталог;
	    	ЭкспортДанных.ЭкспортСтудентовCSVНаСервере(ПутьККаталогу);  
		Сообщить("Экспорт завершен");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьГруппы(Команда)
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = "Выберите путь";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
	    	ПутьККаталогу = ДиалогОткрытияФайла.Каталог;
	    	ЭкспортДанных.ЭкспортГруппCSVНаСервере(ПутьККаталогу);  
		Сообщить("Экспорт завершен");
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Область Создание

&НаКлиенте
Процедура СоздатьСтандартныеТемы(Команда)
	СоздатьСтандартныеТемыНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьСтандартныеТемыНаСервере()

	МассивСтандартныхТем = Новый Массив;
	
	МассивСтандартныхТем.Добавить("Монтаж розетки");
	МассивСтандартныхТем.Добавить("Обжатие кабелей");
	
	Для каждого СтТема Из МассивСтандартныхТем Цикл	
		ТемаСпр = Справочники.Темы.НайтиПоНаименованию(СтТема, Истина);			
		Если НЕ ЗначениеЗаполнено(ТемаСпр) Тогда		
			Спр = Справочники.Темы.СоздатьЭлемент();
			Спр.Наименование = СтТема;
			Спр.Записать(); 
			Сообщить("Тема '" + СтТема + "' создана!"); 
		Иначе 	
			Сообщить("Не создана тема '" + СтТема + "' так как уже создана!");
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовуюТему(Команда)
	ОткрытьФорму("Справочник.Темы.ФормаОбъекта");	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьГруппу(Команда)
	//ОткрытьФорму("Справочник.Студенты.ФормаВыбораГруппы");
	ОткрытьФормуМодально("Обработка.ДанныеИС.Форма.СозданиеГруппы");
КонецПроцедуры

&НаКлиенте
Процедура СозданиеСтудентов(Команда)
	ОткрытьФормуМодально("Обработка.ДанныеИС.Форма.СозданиеСтудентов");
КонецПроцедуры

#КонецОбласти

#Область Константы

&НаКлиенте
Процедура ЗаполнитьКонстантыСтандартнымиЗначениями(Команда)
	ЗаписьКонстант.ЗаписатьКонстанту();
	ПолучитьЗначенияКонстант();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонстантуПравильныйРезультат(Команда)
	ОткрытьФормуМодально("Константа.ПравильныйРезультат.ФормаКонстант");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьГодСозданияКомпетенции(Команда)
	ОткрытьФормуМодально("Константа.ГодСозданияКомпетенции.ФормаКонстант");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНаименованиеГруппы(Команда)
	ОткрытьФормуМодально("Константа.НаименованиеГруппы.ФормаКонстант");
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОткрытьWebHelp(Команда)
	ЗапуститьПриложение("http://88.205.135.82:7071/testerRJ45/");
КонецПроцедуры






